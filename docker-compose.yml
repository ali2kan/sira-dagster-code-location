services:
  sira_dagster_code_location_01:
    container_name: sira_dagster_code_location_01
    image: ghcr.io/ali2kan/sira-dagster-standard-pipeline:main
    # image: ${PIPELINE_IMAGE:-standard-pipeline}
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      DAGSTER_POSTGRES_USER: ${POSTGRES_USER}
      DAGSTER_POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DAGSTER_POSTGRES_DB: ${POSTGRES_DB}
      DAGSTER_POSTGRES_HOST: ${POSTGRES_HOST}
      DAGSTER_POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      DUCKDB_DATABASE: ${DUCKDB_DATABASE}
      PYTHONPATH: "/opt/dagster/app"
      DAGSTER_CURRENT_IMAGE: "ghcr.io/ali2kan/sira-dagster-standard-pipeline:main"
      PIPELINE_NAME: "default"
      WORKING_DIRECTORY: "/opt/dagster/${PIPELINE_NAME}"
      GRPC_PORT: "4000"
    volumes:
      - ./code_location_01:/opt/dagster/app/code_location_01
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    command:
      [
        "dagster",
        "api",
        "grpc",
        "-h",
        "0.0.0.0",
        "-p",
        "4000",
        "-m",
        "pipelines.default",
        "-d",
        "/opt/dagster/app",
      ]
    ports:
      - "4000:4000"
    networks:
      - dagster_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "4000"]
      interval: 10s
      retries: 3

networks:
  dagster_network:
    external: true
    name: ${DAGSTER_NETWORK:-dagster_network}
